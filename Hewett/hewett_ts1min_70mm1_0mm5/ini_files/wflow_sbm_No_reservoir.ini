[modelparameters]
# Format:
# name=stack,type,default,verbose[lookupmap_1],[lookupmap_2],lookupmap_n]
# example:
# RootingDepth=monthlyclim/ROOT,monthyclim,100,1

# - name - Name of the parameter (internal variable)
# - stack - Name of the mapstack (representation on disk or in mem) relative to case
# - type - Type of parameter (default = static)
# - default - Default value if map/tbl is not present
# - set to 1 to be verbose if a map is missing
# - lookupmap - maps to be used in the lookuptable in the case the type is statictbl

#Possible types are::
# - staticmap: Read at startup from map 
# - statictbl: Read at startup from tbl
# - tbl: Read each timestep from tbl and at startup
# - timeseries: read map for each timestep
# - monthlyclim: read a map corresponding to the current month (12 maps in total)
# - dailyclim: read a map corresponding to the current day of the year
# - hourlyclim: read a map corresponding to the current hour of the day (24 in total) (not implemented yet)
# - tss: read a tss file and link to lookupmap (only one allowed) a map using timeinputscalar


# Add this if you want to model reservoirs
#ReserVoirLocs=staticmaps/wflow_reservoirlocs.map,staticmap,0.0,0
#ResTargetFullFrac=intbl/ResTargetFullFrac.tbl,tbl,0.8,0,staticmaps/wflow_reservoirlocs.map
#ResTargetMinFrac=intbl/ResTargetMinFrac.tbl,tbl,0.4,0,staticmaps/wflow_reservoirlocs.map
#ResMaxVolume=intbl/ResMaxVolume.tbl,tbl,0.0,0,staticmaps/wflow_reservoirlocs.map
#ResMaxRelease=intbl/ResMaxRelease.tbl,tbl,1.0,0,staticmaps/wflow_reservoirlocs.map
#ResDemand=intbl/ResDemand.tbl,tblmonthlyclim,1.0,0,staticmaps/wflow_reservoirlocs.map


[run]
# either a runinfo file or a start and end-time are required
#runinfo=runinfo.xml
starttime= 2020-05-23 09:00:00
endtime= 2020-05-23 14:59:00
# required, base timestep of the model
timestepsecs = 60
#start model with cold state
reinit=1
# either a runinfo file or a start and end-time are required
#runinfo=runinfo.xml
#starttime= 1995-01-31 00:00:00 GMT
#endtime= 1995-02-28 00:00:00 GMT
#starttime = None
#endtime= None
runinfo = None


# Allows you to multipla a variable/parameter of the model

#[variable_change_timestep]
#self.Precipitation = self.Precipitation * 3

#[variable_change_once]
#self.PathFrac = self.PathFrac * 1.1



# Define the forcings needed for the model here
# the filename is either the name of the pcraster map-stack or the name of the 
# variable in the netcdf input file
[inputmapstacks]
Precipitation = /inmaps/P
EvapoTranspiration = /inmaps/PET
Temperature = /inmaps/TEMP
# this is optional inflow (positive) or outflow (negative) of the kin-wave reservoir
Inflow = /inmaps/IF 


# Model parameters and settings
[model]
modeltype = sbm
AnnualDischarge = 5
UpdMaxDist = 100
Alpha = 60
ModelSnow = 0
ScalarInput = 0
InterpolationMethod = inv
WIMaxScale = 0.8
Tslice = 1
#UpdMaxDist = 300000.0
origTopogLateral = 1
configfile = wflow_sbm.ini
reinit = 0
fewsrun = 0
OverWriteInit = 0
updating = 0
updateFile = Qupdate.csv
lateralmethod = 0
transfermethod = 0
sCatch = 0
intbl = intbl
timestepsecs = 60
MaxUpdMult = 1.3
MinUpdMult = 0.7
UpFrac = 0.8
# specific for sbm -W and -E
# if -W in the command line, waterdem will be set to 1
waterdem = 0
# if -E in the command line, reInfilt will be set to 1
reInfilt = 0
MassWasting = 0

wflow_subcatch = staticmaps/step2/wflow_subcatch.map
wflow_dem = staticmaps/step2/wflow_dem.map
wflow_ldd = staticmaps/step2/wflow_ldd.map
wflow_river = staticmaps/step2/wflow_river.map
wflow_riverlength = staticmaps/step2/wflow_riverlength.map
wflow_riverlength_fact = staticmaps/step2/wflow_riverlength_fact.map
wflow_landuse = staticmaps/step2/wflow_landuse.map
wflow_soil = staticmaps/step2/wflow_soil.map
wflow_gauges = staticmaps/step2/wflow_gauges.map
wflow_inflow = staticmaps/step2/wflow_inflow.map
wflow_riverwidth = staticmaps/step2/wflow_riverwidth.map
wflow_streamorder = staticmaps/step2/wflow_streamorder.map
wflow_demmax = staticmaps/step2/wflow_demmax.map
wflow_demmin = staticmaps/step2/wflow_demmin.map

RunoffGenSigmaFunction = 0
SubCatchFlowOnly = 0
#TemperatureCorrectionMap = staticmaps/step2/wflow_tempcor.map

[misc]
#mapSaveInterval=365

[framework]
# outputformat for the *dynamic* mapstacks (not the states and summary maps)
# 1: pcraster
# 2: numpy
# 3: matlab

# netcdfoutput requires also outputformat = 1 (default) and additionally the name of the file
#netcdfoutput = outmaps.nc
#netcdfstaticoutput = outsum.nc
#netcdfwritebuffer=100

outputformat = 1
debug = 0
netcdfinput = None
netcdfoutput = None
netcdfstaticoutput = None
netcdfstaticinput = None
EPSG = EPSG:26915

[layout]
# if set to zero the cell-size is given in lat/long (the default)
sizeinmetres = 10




[outputmaps]
#self.Inflow=IF
self.SurfaceRunoff=run
#self.WaterLevel=lev
#self.ReservoirVolume=res
#self.OutflowSR=outf
#self.OldSurfaceRunoff=oldrun
#self.oldInwater=oldIW
#self.zi = gwt_dep
#self.SubCellFrac=scf
#self.Inwater=IW
#self.DistToUpdPt=dist
#self.SnowMelt=sno
#self.FirstZoneDepth=fzd
#self.TopoLdd=ldd
#self.InwaterMM=IW
#self.watbal=wat


[summary]
self.MaxLeakage=MaxLeakage.map
#self.CCup=CCup.map
#self.CClow=CClow.map
# Save and average these per LU type

[summary_sum]
self.Precipitation=Sumprecip.map

[summary_max]
#self.Precipitation=maxprecip.map
#self.WaterFrac=maxwfrac.map


[summary_avg]
#self.reinfiltwater=avgreinfilt.map
#self.SurfaceWatbal=avgwatbalsurface.map
#self.InterceptionWatBal=avgwatbalint.map
#self.SoilWatbal=avgwatbalsoil.map
#self.CanopyGapFraction=avggap.map
#self.PotTransSoil=avgptra.map
#self.Transpiration=avgtra.map
#self.soilevap=avgsoilevap.map
#self.Interception=avgint.map
#self.PotenEvap=avgetpot.map
#self.ActEvap=avgactevap.map
#self.ActEvapOpenWater=avgopenwateret.map
#self.WaterFrac=avgwfrac.map
#self.ActRootingDepth=avgactrooting.map
self.InfiltExcess=avginfex.map
#self.SubCellGWRunoff=avgsubgw.map




[outputcsv_0]
#samplemap=staticmaps/step2/wflow_reservoirlocs.map
#self.ReservoirVolume=resvol.csv
samplemap=staticmaps/step2/wflow_subcatch.map
self.SurfaceRunoffMM=Qsubcatch_avg.csv

# gauge output
[outputtss_0]
#samplemap=staticmaps/step2/wflow_reservoirlocs.map
#self.ReservoirVolume=resvol.tss
samplemap = staticmaps/step2/wflow_gauges.map
self.SurfaceRunoff = run_average.tss
function = average

[outputcsv_1]
#samplemap=staticmaps/area.map
#samplemap=staticmaps/step2/wflow_subcatch.map
samplemap = staticmaps/step2/wflow_gauges.map
self.SurfaceRunoff = run_max.csv
function = maximum

[outputcsv_2]
samplemap = staticmaps/step2/wflow_gauges.map
self.RiverWidth = riverwidth.csv

# Alle runoff in mm
#self.InwaterMM=specrun.csv

# Neerslag in mm
self.Precipitation=prec.csv

# totale verdamping in mm
self.ActEvap+self.Interception=teact.csv

# Totale storage in mm
self.UStoreDepth + self.FirstZoneDepth + self.CanopyStorage = store.csv


#[outputcsv_3]
#samplemap = reservoirs/ReservoirLocs.map
#self.ReservoirVolume = reservoir_volume.csv
#self.OutflowSR = reservoir_outflow.csv
#self.SurfaceRunoff = reservoir_inflow.csv



# The section below is for the BMI and low level API. It can be empty if you do not use this
[API]
#states
CanopyStorage = 2, mm
FirstZoneDepth  = 2, mm
LowerZoneStorage = 2, mm
Snow = 2, mm
SnowWater = 2, mm
SurfaceRunoff = 2, m^3/s
SurfaceRunoffDyn = 2, m^3/s
TSoil = 2, oC
UStoreDepth = 2, mm
WaterLevel = 2, m
WaterLevelDyn = 2, m

# fluxes
PotTransSoil = 1, mm/timestep
Transpiration = 1, mm/timestep
ActEvapOpenWater = 1, mm/timestep
soilevap = 1, mm/timestep
Interception = 1, mm/timestep
ActEvap = 1, mm/timestep
SurfaceRunoffCatchmentMM = 1, mm/timestep
ExcessWater = 1, mm/timestep
InfiltExcess = 1, mm/timestep
ActInfilt = 1, mm/timestep
zi = 1, mm/timestep
Transfer = 1, mm/timestep
CapFlux = 1, mm/timestep
RunoffCoeff = 1, -
InwaterMM = 2, mm/timestep
# parameters
#Soil
M = 3, -
thetaR = 3, mm/mm
thetaS = 3, mm/mm
FirstZoneKsatVer = 3, mm/timestep
PathFrac = 3, -
InfiltCapSoil = 3, mm/timestep
InfiltCapPath = 3, mm/timestep
FirstZoneMinCapacity = 3, mm
FirstZoneCapacity = 3, mm
RootingDepth = 3, mm
MaxLeakage = 3, mm/timestep
CapScale = 3, mm/timestep
RunoffGeneratingGWPerc = 3, -
#default RunoffGeneratingGWPerc = 3, -
rootdistpar = 3, mm

#Canopy
CanopyGapFraction = 3, -
MaxCanopyStorage = 3, mm
EoverR = 3, -

#Surface water
N = 3, -
N_river = 3, -

#Snow and frozen soil modelling parameters
cf_soil = 3, -
TTI = 3, oC
TT = 3, oC
Cfmax = 3, mm/oC/timestep
WHC = 3, -
w_soil = 3, -
#static
Altitude = 3, m
Bw = 3, m
River = 3, -
DLC = 3, m

# Below are the forcing variables. By putting these here you MUST
# supply them via the API, if not these will default to 0.0
#P=0, mm/timestep
#PET=0, mm/timestep
#TEMP=0, oC
#IF=0, m^3/s

# Misc stuff
timestepsecs= 3, s